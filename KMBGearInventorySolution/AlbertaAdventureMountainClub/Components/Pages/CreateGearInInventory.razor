@* @page "/CreateGearInInventory"
@inject NavigationManager NavigationManager
@inject AlbertaAdventureServices AlbertaAdventureServices



<h3>CreateGearInInventory</h3>

<div>
    <div>
        <button @onclick="ClosePage">X</button>
    </div>
    <EditForm Model="gear" OnValidSubmit="CreateGear">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div>
            <label for="Size">Size</label>
            <InputText id="Size" @bind-Value="@gear.Size" />
        </div>
        <div>
            <label for="CategoryName">CategoryName</label>
            <InputText id="CategoryName" @bind-Value="@gear.CategoryName" />
        </div>
        <div>
            <label for="Brand">Brand</label>
            <InputText id="Brand" @bind-Value="@gear.Brand" />
        </div>
        <div>
            <label for="Picture">Picture</label>
            <InputText id="Picture" @bind-Value="@gear.Picture" />
        </div>
        <div>
            <label for="Condition">Condition</label>
            <InputText id="Condition" @bind-Value="@gear.Condition" />
        </div>
        <div>
            <button type="submit">Create</button>
        </div>
        <div>
            <label for="Description">Description</label>
            <InputText id="Description" @bind-Value="@gear.Description" />
        </div>
    </EditForm>
</div>

@code {

    private GearInventoryViewModel gear = new GearInventoryViewModel();

    private void ClosePage()
    {
        NavigationManager.NavigateTo("/GearInventory");
    }

    private async Task CreateGear()
    {
        // await AlbertaAdventureServices.CreateGearInventory(gear);
        // NavigationManager.NavigateTo("/GearInventory");
    }
   

}
 *@

            @page "/CreateGearInInventory"
@inject NavigationManager NavigationManager
@inject AlbertaAdventureServices AlbertaAdventureServices
@rendermode InteractiveServer

<div class="create-gear-container">
    <!-- Header with Close Button -->
    <div class="create-gear-header">
        <h2>Add New Gear</h2>
        <button class="close-btn" aria-label="Close" @onclick="ClosePage">&times;</button>
    </div>

    <EditForm Model="gear" OnValidSubmit="CreateGear">
        <DataAnnotationsValidator />
        

        <div class="gear-form">
            <div class="form-group">
                <label for="Size">Size</label>
                <InputText id="Size" class="form-control" @bind-Value="@gear.Size" />
            </div>

            <div class="form-group">
                <label for="CategoryName">Category Name</label>
                <InputText id="CategoryName" class="form-control" @bind-Value="@gear.CategoryName" />
            </div>

            <div class="form-group">
                <label for="Brand">Brand</label>
                <InputText id="Brand" class="form-control" @bind-Value="@gear.Brand" />
            </div>

            <div class="form-group">
                <label for="Picture">Picture URL</label>
                <InputText id="Picture" class="form-control" @bind-Value="@gear.Picture" />
            </div>

            <div class="form-group">
                <label for="Condition">Condition</label>
                <InputText id="Condition" class="form-control" @bind-Value="@gear.Condition" />
            </div>

            <div class="form-group">
                <label for="Description">Description</label>
                <InputTextArea id="Description" class="form-control" rows="3" @bind-Value="@gear.Description" />
            </div>

            <!-- Buttons -->
            <div class="button-group">
                <button type="submit" class="submit-btn">Create Gear</button>
                <button type="button" class="cancel-btn" @onclick="ClosePage">Cancel</button>
            </div>
        </div>
    </EditForm>
</div>

@code {
    private GearInventoryViewModel gear = new GearInventoryViewModel();

    private void ClosePage()
    {
        NavigationManager.NavigateTo("/");
    }

    private async Task CreateGear()
    {
        // await AlbertaAdventureServices.CreateGearInventory(gear);
        // NavigationManager.NavigateTo("/GearInventory");
        NavigationManager.NavigateTo("/");
    }
}
